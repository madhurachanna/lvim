local mappings = {
    [" "] = "which_key_ignore",
    [";"] = " Dashboard",
    ["e"] = { "<cmd>NvimTreeToggle<cr>", " Explorer" },
    ["s"] = { "<cmd>:w<cr>", "Save" },
    ["h"] = { "<cmd>:noh<cr>", " No Highlight" },
    ["T"] = " Terminal",
    p = {
        name = " Packer",
        c = { "<cmd>PackerCompile<cr>", "Compile" },
        i = { "<cmd>PackerInstall<cr>", "Install" },
        r = { "<cmd>lua require('lvim.utils').reload_lv_config()<cr>", "Reload" },
        s = { "<cmd>PackerSync<cr>", "Sync" },
        S = { "<cmd>PackerStatus<cr>", "Status" },
        u = { "<cmd>PackerUpdate<cr>", "Update" },
    },
    b = {
        name = "﬘ Buffers",
        b = { "<cmd>BufferKill<cr>", "Kill buffer" },
        j = { "<cmd>BufferLinePick<cr>", "Jump" },
        e = { "<cmd>BufferLinePickClose<cr>", "Pick and close" },
        f = { "<cmd>Telescope buffers<cr>", "Find" },
        h = { "<cmd>BufferLineCloseLeft<cr>", "Close the left" },
        l = { "<cmd>BufferLineCloseRight<cr>", "Close the right" },
    },
    n = {
        name = " NvimTree",
        l = { "<cmd>NvimTreeResize +20<cr>", "Increase width" },
        h = { "<cmd>NvimTreeResize -20<cr>", "Decrease width" },
    },
    D = {
        name = " Debug",
        b = { "<cmd>DebugToggleBreakpoint<cr>", "Toggle Breakpoint" },
        c = { "<cmd>DebugContinue<cr>", "Continue" },
        i = { "<cmd>DebugStepInto<cr>", "Step Into" },
        o = { "<cmd>DebugStepOver<cr>", "Step Over" },
        r = { "<cmd>DebugToggleRepl<cr>", "Toggle Repl" },
        s = { "<cmd>DebugStart<cr>", "Start" }
    },
    g = {
        name = " Git",
        -- g = { "<cmd>vertical G<cr><cmd>vertical resize -15<cr>", "Git status" },
        g = { "<cmd>G<cr><cmd>resize -10<cr>", "Git Status" },
        P = { "<cmd>Git -c push.default=current push<cr>", "Git Push" },
        F = { "<cmd>Git -c push.default=current push -f <cr>", "Git Force Push" },
        p = { "<cmd>Gitsigns preview_hunk<cr>", "Git Preview" },
        j = { "<cmd>Gitsigns next_hunk<cr>", "Next Hunk" },
        k = { "<cmd>Gitsigns prev_hunk<cr>", "Prev Hunk" },
        h = { "<cmd>diffget //2<cr>", "Diff-get Left" },
        l = { "<cmd>diffget //3<cr>", "Diff-get Right" },
        L = { "<cmd>Git log<cr>", "Git Log" },
        d = { "<cmd>Gvdiffsplit<cr><cmd>windo w<cr>", "Git Diff" },
        s = { "<cmd>Gitsigns stage_hunk<cr>", "Stage Hunk" },
        S = { "<cmd>Git log stash<cr>", "Stage Hunk" },
        r = { "<cmd>Gitsigns reset_hunk<cr>", "Reset Hunk" },
        b = { "<cmd>Telescope git_branches<cr>", "Checkout Branch" },
        B = { "<cmd>Gitsigns toggle_current_line_blame<cr>", "Toggle Line Blame" },
    },
    l = {
        name = " LSP",
        a = { "<cmd>Lspsaga code_action<cr>", "Code Action" },
        A = { "<cmd>Lspsaga range_code_action<cr>", "Selected Action" },
        d = { "<cmd>Telescope lsp_document_diagnostics<cr>", "Document Diagnostics" },
        D = { "<cmd>Telescope lsp_workspace_diagnostics<cr>", "Workspace Diagnostics" },
        f = { "<cmd>LspFormatting<cr>", "Format" },
        i = { "<cmd>LspInfo<cr>", "Info" },
        l = { "<cmd>Lspsaga lsp_finder<cr>", "LSP Finder" },
        L = { "<cmd>Lspsaga show_line_diagnostics<cr>", "Line Diagnostics" },
        p = { "<cmd>Lspsaga preview_definition<cr>", "Preview Definition" },
        q = { "<cmd>Telescope quickfix<cr>", "Quickfix" },
        r = { "<cmd>Lspsaga rename<cr>", "Rename" },
        t = { "<cmd>LspTypeDefinition<cr>", "Type Definition" },
        x = { "<cmd>cclose<cr>", "Close Quickfix" },
        s = { "<cmd>Telescope lsp_document_symbols<cr>", "Document Symbols" },
        S = { "<cmd>Telescope lsp_workspace_symbols<cr>", "Workspace Symbols" }
    },
    w = {
        name = ' Window',
        d = { "<C-w>q", "Quit window" },
        h = { "<C-w>h", "Go to left window" },
        j = { "<C-w>j", "Go to down window" },
        k = { "<C-w>k", "Go to up window" },
        l = { "<C-w>l", "Go to right window" },
        H = { "<cmd>vertical resize +5<cr>", "Vertical resize +5" },
        J = { "<cmd>resize +5<cr>", "Resize +5" },
        K = { "<cmd>resize -5<cr>", "Resize -5" },
        L = { "<cmd>vertical resize -5<cr>", "Vertical resize -5" },
        w = { "<C-w>w", "Cycle window" },
        s = { "<cmd>split<cr>", "Horizontal split" },
        v = { "<cmd>vs<cr>", "Vertical split" },
        ["\\"] = { "<C-w>|<cr>", "Max Window" },
        ["="] = { "<C-w>=<cr>", "Equal Window" },
    },
    t = {
        name = " Telescope",
        b = { "<cmd>Telescope git_branches<cr>", "Checkout branch" },
        c = { "<cmd>Telescope colorscheme<cr>", "Colorscheme" },
        d = { "<cmd>Telescope lsp_document_diagnostics<cr>", "Document Diagnostics" },
        D = { "<cmd>Telescope lsp_workspace_diagnostics<cr>", "Workspace Diagnostics" },
        f = { "<cmd>Telescope find_files<cr>", "Find File" },
        m = { "<cmd>Telescope marks<cr>", "Marks" },
        M = { "<cmd>Telescope man_pages<cr>", "Man Pages" },
        r = { "<cmd>Telescope oldfiles<cr>", "Open Recent File" },
        R = { "<cmd>Telescope registers<cr>", "Registers" },
        t = { "<cmd>Telescope live_grep<cr>", "Text" },
        s = { "<cmd>Telescope grep_string<cr>", "Text" },
        p = { "<cmd>Telescope projects<cr>", "Projects" }
    },
    S = {
        name = " Session",
        s = { "<cmd>SessionSave<cr>", "Save Session" },
        l = { "<cmd>SessionLoad<cr>", "Load Session" }
    },
    z = {
        name = " Zen",
        s = { "<cmd>TZBottom<cr>", "toggle status line" },
        t = { "<cmd>TZTop<cr>", "toggle tab bar" },
        z = { "<cmd>TZAtaraxis<cr>", "toggle zen" },
    }
}

return mappings 
